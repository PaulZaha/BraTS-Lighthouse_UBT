Starting... 
2025-03-18 12:52:10.031868: Using splits from existing split file: /mnt/Z/Repositories/BraTS/BraTS-Lighthouse_UBT/data/preprocessed/Task501/splits_final.pkl 
2025-03-18 12:52:10.032085: The split file contains 5 splits. 
2025-03-18 12:52:10.032127: Desired fold for training: 0 
2025-03-18 12:52:10.032162: This split has 7 training and 2 validation cases. 
2025-03-18 12:52:10.099209: TRAINING KEYS:
 odict_keys([np.str_('BRATS_0015'), np.str_('BRATS_0017'), np.str_('BRATS_0029'), np.str_('BRATS_0030'), np.str_('BRATS_0041'), np.str_('BRATS_0044'), np.str_('BRATS_0048')]) 
2025-03-18 12:52:10.099333: VALIDATION KEYS:
 odict_keys([np.str_('BRATS_0004'), np.str_('BRATS_0028')]) 
2025-03-18 12:52:11.158906: lr: 0.001 
2025-03-18 12:52:13.530314: Unable to plot network architecture: 
2025-03-18 12:52:13.530933: No module named 'hiddenlayer' 
2025-03-18 12:52:13.531383: 
printing the network instead:
 
2025-03-18 12:52:13.531816: MedNeXt(
  (stem): Conv3d(1, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  (enc_block_0): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (down_0): MedNeXtDownBlock(
    (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=32)
    (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
    (conv2): Conv3d(32, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(128, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): Conv3d(32, 64, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (enc_block_1): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (down_1): MedNeXtDownBlock(
    (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=64)
    (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
    (conv2): Conv3d(64, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): Conv3d(64, 128, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (enc_block_2): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (4): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (5): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (6): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (7): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (down_2): MedNeXtDownBlock(
    (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=128)
    (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
    (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(1024, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): Conv3d(128, 256, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (enc_block_3): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (4): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (5): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (6): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (7): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (down_3): MedNeXtDownBlock(
    (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=256)
    (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
    (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(2048, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): Conv3d(256, 512, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (bottleneck): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (4): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (5): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (6): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (7): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (up_3): MedNeXtUpBlock(
    (conv1): ConvTranspose3d(512, 512, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=512)
    (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
    (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(4096, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): ConvTranspose3d(512, 256, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (dec_block_3): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (4): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (5): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (6): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (7): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (up_2): MedNeXtUpBlock(
    (conv1): ConvTranspose3d(256, 256, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=256)
    (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
    (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(2048, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): ConvTranspose3d(256, 128, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (dec_block_2): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (4): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (5): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (6): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (7): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (up_1): MedNeXtUpBlock(
    (conv1): ConvTranspose3d(128, 128, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=128)
    (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
    (conv2): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(512, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): ConvTranspose3d(128, 64, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (dec_block_1): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (up_0): MedNeXtUpBlock(
    (conv1): ConvTranspose3d(64, 64, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=64)
    (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
    (conv2): Conv3d(64, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(192, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): ConvTranspose3d(64, 32, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (dec_block_0): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (out_0): OutBlock(
    (conv_out): ConvTranspose3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  )
  (out_1): OutBlock(
    (conv_out): ConvTranspose3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  )
  (out_2): OutBlock(
    (conv_out): ConvTranspose3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  )
  (out_3): OutBlock(
    (conv_out): ConvTranspose3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  )
  (out_4): OutBlock(
    (conv_out): ConvTranspose3d(512, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  )
) 
2025-03-18 12:52:13.597831: 
 
2025-03-18 12:52:13.598712: 
epoch:  0 
2025-03-18 12:52:41.194228: train loss : 1.6854 
2025-03-18 12:52:41.842184: validation loss: 1.0707 
2025-03-18 12:52:41.842412: Average global foreground Dice: [np.float32(0.0027)] 
2025-03-18 12:52:41.842475: (interpret this as an estimate for the Dice of the different classes. This is not exact.) 
2025-03-18 12:52:42.036450: lr: 0.000999 
2025-03-18 12:52:42.168765: saving checkpoint... 
2025-03-18 12:52:42.919261: done, saving took 0.88 seconds 
2025-03-18 12:52:42.919850: This epoch took 29.320592 s
 
2025-03-18 12:52:42.919910: 
epoch:  1 
