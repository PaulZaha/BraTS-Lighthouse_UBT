Starting... 
2025-03-18 14:15:07.059627: Creating new 5-fold cross-validation split... 
2025-03-18 14:15:07.060353: Desired fold for training: 0 
2025-03-18 14:15:07.060421: This split has 7 training and 2 validation cases. 
2025-03-18 14:15:07.820587: TRAINING KEYS:
 odict_keys([np.str_('BRATS_0015'), np.str_('BRATS_0017'), np.str_('BRATS_0029'), np.str_('BRATS_0030'), np.str_('BRATS_0041'), np.str_('BRATS_0044'), np.str_('BRATS_0048')]) 
2025-03-18 14:15:07.820741: VALIDATION KEYS:
 odict_keys([np.str_('BRATS_0004'), np.str_('BRATS_0028')]) 
2025-03-18 14:15:08.908542: lr: 0.001 
2025-03-18 14:15:14.767947: Unable to plot network architecture: 
2025-03-18 14:15:14.768093: No module named 'hiddenlayer' 
2025-03-18 14:15:14.768153: 
printing the network instead:
 
2025-03-18 14:15:14.768208: MedNeXt(
  (stem): Conv3d(1, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  (enc_block_0): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (down_0): MedNeXtDownBlock(
    (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=32)
    (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
    (conv2): Conv3d(32, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(128, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): Conv3d(32, 64, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (enc_block_1): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (down_1): MedNeXtDownBlock(
    (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=64)
    (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
    (conv2): Conv3d(64, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): Conv3d(64, 128, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (enc_block_2): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (4): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (5): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (6): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (7): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (down_2): MedNeXtDownBlock(
    (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=128)
    (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
    (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(1024, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): Conv3d(128, 256, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (enc_block_3): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (4): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (5): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (6): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (7): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (down_3): MedNeXtDownBlock(
    (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=256)
    (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
    (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(2048, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): Conv3d(256, 512, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (bottleneck): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (4): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (5): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (6): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (7): MedNeXtBlock(
      (conv1): Conv3d(512, 512, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=512)
      (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
      (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(4096, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (up_3): MedNeXtUpBlock(
    (conv1): ConvTranspose3d(512, 512, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=512)
    (norm): GroupNorm(512, 512, eps=1e-05, affine=True)
    (conv2): Conv3d(512, 4096, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(4096, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): ConvTranspose3d(512, 256, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (dec_block_3): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (4): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (5): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (6): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (7): MedNeXtBlock(
      (conv1): Conv3d(256, 256, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=256)
      (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
      (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(2048, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (up_2): MedNeXtUpBlock(
    (conv1): ConvTranspose3d(256, 256, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=256)
    (norm): GroupNorm(256, 256, eps=1e-05, affine=True)
    (conv2): Conv3d(256, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(2048, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): ConvTranspose3d(256, 128, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (dec_block_2): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (4): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (5): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (6): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (7): MedNeXtBlock(
      (conv1): Conv3d(128, 128, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=128)
      (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
      (conv2): Conv3d(128, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (up_1): MedNeXtUpBlock(
    (conv1): ConvTranspose3d(128, 128, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=128)
    (norm): GroupNorm(128, 128, eps=1e-05, affine=True)
    (conv2): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(512, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): ConvTranspose3d(128, 64, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (dec_block_1): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (3): MedNeXtBlock(
      (conv1): Conv3d(64, 64, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=64)
      (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
      (conv2): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (up_0): MedNeXtUpBlock(
    (conv1): ConvTranspose3d(64, 64, kernel_size=(5, 5, 5), stride=(2, 2, 2), padding=(2, 2, 2), groups=64)
    (norm): GroupNorm(64, 64, eps=1e-05, affine=True)
    (conv2): Conv3d(64, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (act): GELU(approximate='none')
    (conv3): Conv3d(192, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (res_conv): ConvTranspose3d(64, 32, kernel_size=(1, 1, 1), stride=(2, 2, 2))
  )
  (dec_block_0): Sequential(
    (0): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (1): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
    (2): MedNeXtBlock(
      (conv1): Conv3d(32, 32, kernel_size=(5, 5, 5), stride=(1, 1, 1), padding=(2, 2, 2), groups=32)
      (norm): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv2): Conv3d(32, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (act): GELU(approximate='none')
      (conv3): Conv3d(96, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
  (out_0): OutBlock(
    (conv_out): ConvTranspose3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  )
  (out_1): OutBlock(
    (conv_out): ConvTranspose3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  )
  (out_2): OutBlock(
    (conv_out): ConvTranspose3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  )
  (out_3): OutBlock(
    (conv_out): ConvTranspose3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  )
  (out_4): OutBlock(
    (conv_out): ConvTranspose3d(512, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1))
  )
) 
2025-03-18 14:15:14.826222: 
 
2025-03-18 14:15:14.826643: 
epoch:  0 
